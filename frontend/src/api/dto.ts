/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/templates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getTemplates"];
        put?: never;
        post: operations["createTemplate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllCategories"];
        put?: never;
        post: operations["createCategory"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/reissue": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["reissue"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/{templatesId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["detailsTemplate"];
        put?: never;
        post?: never;
        delete: operations["modifyTemplate"];
        options?: never;
        head?: never;
        patch: operations["modifyTemplate_1"];
        trace?: never;
    };
    "/categories/{categoriesId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deleteCategory"];
        options?: never;
        head?: never;
        patch: operations["updateCategory"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        TemplateCreateRequest: {
            title: string;
            description: string;
            /** Format: int32 */
            price?: number;
            /** Format: int64 */
            categoryId: number;
            image: string;
        };
        SuccessResponseTemplateResponse: {
            /** Format: int32 */
            status?: number;
            message?: string;
            data?: components["schemas"]["TemplateResponse"];
        };
        TemplateResponse: {
            /** Format: int64 */
            templateId?: number;
            title?: string;
            description?: string;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string;
            category?: string;
        };
        CategoryRequest: {
            name?: string;
        };
        CategoryResponse: {
            /** Format: int64 */
            id?: number;
            name?: string;
        };
        SuccessResponseCategoryResponse: {
            /** Format: int32 */
            status?: number;
            message?: string;
            data?: components["schemas"]["CategoryResponse"];
        };
        TokenReissue: {
            refreshToken?: string;
        };
        SuccessResponseToken: {
            /** Format: int32 */
            status?: number;
            message?: string;
            data?: components["schemas"]["Token"];
        };
        Token: {
            accessToken?: string;
            refreshToken?: string;
        };
        Logout: {
            refreshToken?: string;
        };
        SuccessResponseVoid: {
            /** Format: int32 */
            status?: number;
            message?: string;
            data?: Record<string, never>;
        };
        OAuthLogin: {
            provider?: string;
            authCode?: string;
        };
        TemplateUpdateRequest: {
            title: string;
            description: string;
            /** Format: int32 */
            price?: number;
            /** Format: int64 */
            categoryId: number;
            image: string;
        };
        SuccessResponseTemplateScrollResponse: {
            /** Format: int32 */
            status?: number;
            message?: string;
            data?: components["schemas"]["TemplateScrollResponse"];
        };
        TemplateScrollResponse: {
            templates?: Array<components["schemas"]["TemplateSummary"]>;
            /** Format: date-time */
            nextCursor?: string;
        };
        TemplateSummary: {
            /** Format: int64 */
            id?: number;
            title?: string;
            /** Format: int32 */
            price?: number;
            category?: string;
            /** Format: date-time */
            createdAt?: string;
        };
        SuccessResponseTemplateDetailResponse: {
            /** Format: int32 */
            status?: number;
            message?: string;
            data?: components["schemas"]["TemplateDetailResponse"];
        };
        TemplateDetailResponse: {
            /** Format: int64 */
            templateId?: number;
            title?: string;
            description?: string;
            imageUrl?: string;
            /** Format: int32 */
            price?: number;
            category?: string;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string;
        };
        SuccessResponseListCategoryResponse: {
            /** Format: int32 */
            status?: number;
            message?: string;
            data?: Array<components["schemas"]["CategoryResponse"]>;
        };
        SuccessResponse: {
            /** Format: int32 */
            status?: number;
            message?: string;
            data?: unknown;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getTemplates: {
        parameters: {
            query?: {
                cursor?: string;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseTemplateScrollResponse"];
                };
            };
        };
    };
    createTemplate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateCreateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseTemplateResponse"];
                };
            };
        };
    };
    getAllCategories: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseListCategoryResponse"];
                };
            };
        };
    };
    createCategory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CategoryRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseCategoryResponse"];
                };
            };
        };
    };
    reissue: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenReissue"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseToken"];
                };
            };
        };
    };
    logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Logout"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseVoid"];
                };
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OAuthLogin"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseToken"];
                };
            };
        };
    };
    detailsTemplate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                templatesId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseTemplateDetailResponse"];
                };
            };
        };
    };
    modifyTemplate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                templatesId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponse"];
                };
            };
        };
    };
    modifyTemplate_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                templatesId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseTemplateResponse"];
                };
            };
        };
    };
    deleteCategory: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                categoriesId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseVoid"];
                };
            };
        };
    };
    updateCategory: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                categoriesId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CategoryRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SuccessResponseCategoryResponse"];
                };
            };
        };
    };
}
